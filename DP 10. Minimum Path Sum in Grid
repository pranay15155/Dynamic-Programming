//MEMOIZATION ****************************************************************************************************************

class Solution {
public:
    int n,m;
    int f(int row,int col,vector<vector<int>>& grid,vector<vector<int>>& dp){
        if(row>=n || col>=m)return 1e8;
        if(row==n-1 && col==m-1)return grid[n-1][m-1];
        if(dp[row][col]!=-1)return dp[row][col];
        int right=f(row,col+1,grid,dp);
        int down=f(row+1,col,grid,dp);
        return dp[row][col]=grid[row][col]+min(right,down);
    }
    int minPathSum(vector<vector<int>>& grid) {
        n=grid.size();
        m=grid[0].size();
        vector<vector<int>>dp(n,vector<int>(m,-1));
        return f(0,0,grid,dp);
    }
};

//TABULATION  ****************************************************************************************************************

