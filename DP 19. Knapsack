//MEMOIZATION ****************************************************************

class Solution
{
    public:
    int f(int ind,int weight,int wt[],int val[],int n, vector<vector<int>>&dp){
        if(ind==n-1){
            if(weight>=wt[ind])return val[ind];
            return 0;
        }
        if(dp[ind][weight]!=-1)return dp[ind][weight];
        int take=(weight>=wt[ind])?val[ind]+f(ind+1,weight-wt[ind],wt,val,n,dp):0;
        int not_take=f(ind+1,weight,wt,val,n,dp);
        return dp[ind][weight]=max(take,not_take);
    }
    int knapSack(int W, int wt[], int val[], int n) 
    { 
      vector<vector<int>>dp(n,vector<int>(W+1,-1));
      return f(0,W,wt,val,n,dp);
    }
};

//TABULATION **************************************************************************

