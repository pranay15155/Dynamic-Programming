//MEMOIZATION ***************************************************************************

class Solution{

	public:
	int MOD=1e9+7;
	int f(int ind,int target,int arr[],vector<vector<int>>&dp,int n){
	    if(ind==n-1){
	        if(target==0 && arr[ind]==0)return 2;
	        if(target==0 ||arr[ind]==target)return 1;
	        return 0;
	    }
	    if(ind>=n)return 0;
	    if(dp[ind][target]!=-1)return dp[ind][target];
	    int not_take=f(ind+1,target,arr,dp,n)%MOD;
	    int take=(target>=arr[ind])?f(ind+1,target-arr[ind],arr,dp,n)%MOD:0;
	    return dp[ind][target]=(take+not_take)%MOD;
	}
	int perfectSum(int arr[], int n, int sum)
	{
        // Your code goes here
        vector<vector<int>>dp(n,vector<int>(sum+1,-1));
        return f(0,sum,arr,dp,n)%MOD;
	}
	  
};

//TABULATION ******************************************************************************************

